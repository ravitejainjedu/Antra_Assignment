select count(*) as ProductCount from Production.Product;

select count(*) as IncludedInSubcategory from Production.Product where ProductSubcategoryID is not null;

select ProductSubcategoryID, count(*) as CountedProducts from Production.Product
group by ProductSubcategoryID;

select count(*) as NoSubcategoryCount from Production.Product where ProductSubcategoryID is null;

select sum(quantity) as TotalQuantity from Production.ProductInventory;

select productid, sum(quantity) as TheSum from Production.ProductInventory where LocationID=40
group by ProductID having sum(quantity)<100;

select shelf, productid, sum(quantity) as TheSum from Production.ProductInventory where LocationID=40
group by shelf, productid having sum(quantity)<100;

select avg(quantity) as AvgQuantity from Production.ProductInventory where LocationID=10;

select productid, shelf, avg(quantity) as TheAvg from Production.ProductInventory
group by productID, shelf;

select productid,shelf, avg(quantity) as TheAvg from Production.ProductInventory
where shelf <> 'N/A' group by productid, shelf;

select color, class, count(*) as TheCount, avg(listprice) as AvgPrice from Production.Product
where color is not null and class is not null group by color, class;

select cr.name as Country, sp.name as Province from person.CountryRegion as cr
join person.StateProvince as sp
on cr.CountryRegionCode = sp.CountryRegionCode order by cr.Name, sp.Name;

select cr.name as country, sp.name as province from person.CountryRegion as cr
join Person.StateProvince as sp on cr.CountryRegionCode = sp.CountryRegionCode
where cr.Name in ('Germany', 'Canada') order by cr.Name, sp.Name;


select distinct p.productname from Products p join
[Order Details] od on p.ProductID = od.ProductID join
Orders o on od.OrderID = o.OrderID
where o.OrderDate >= DATEADD(YEAR, -27, GETDATE());

select top 5 c.postalcode as zipcode, count(*) as TotalProductsSold
from customers c join orders o on c.CustomerID = o.CustomerID
join [Order Details] od on o.OrderID = od.OrderID 
group by c.PostalCode order by TotalProductsSold desc;

select top 5 c.postalcode as ZipCode, count(*) as TotalProductsSold
from customers c join orders o on c.CustomerID=o.CustomerID
join [Order Details] od on o.OrderID = od.OrderID
where o.OrderDate>=DATEADD(year, -27, GETDATE())
group by c.PostalCode order by TotalProductsSold desc;

select city, count(*) as CustomerCount from Customers group by City;

select city, count(*) as CustomerCount from Customers group by City having count(*) > 2;

select distinct c.companyname, o.orderdate from Customers c join
Orders o on c.CustomerID = o.CustomerID where o.OrderDate > '1998-01-01';

with LatestOrder as (select max(orderdate) as MaxDate from orders)
select distinct c.companyname, o.orderdate from customers c
join orders o on c.CustomerID = o.CustomerID join LatestOrder lo on o.OrderDate = lo.MaxDate;

select c.companyname, count(od.productid) as TotalProductsBought from Customers c
join orders o on c.CustomerID = o.CustomerID
join [Order Details] od on o.OrderID = od.OrderID group by c.CompanyName;

select c.CustomerID, count(od.productid) as TotalProductsBought from Customers c
join orders o on c.CustomerID = o.CustomerID
join [Order Details] od on o.OrderID = od.OrderID group by c.CustomerID
having count(od.ProductID) > 100;

select distinct s.companyname as SupplierCompanyName, s.companyname as ShippingCompanyName
from Suppliers s
join Products p on s.SupplierID = p.SupplierID
join [Order Details] od on p.ProductID = od.ProductID
join Orders o on od.OrderID = o.OrderID
join Shippers sh on o.ShipVia = sh.ShipperID;

select o.OrderDate, p.ProductName
from Orders o
JOIN [Order Details] od on o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
order by o.OrderDate;

select e1.EmployeeID as Emp1ID, e1.FirstName + ' ' + e1.LastName as Emp1Name,
       e2.EmployeeID as Emp2ID, e2.FirstName + ' ' + e2.LastName as Emp2Name,
       e1.Title
from Employees e1
join Employees e2 on e1.Title = e2.Title and e1.EmployeeID < e2.EmployeeID;

select m.EmployeeID as ManagerID, m.FirstName + ' ' + m.LastName as ManagerName,
       count(e.EmployeeID) as ReportsCount
from Employees e
join Employees m on e.ReportsTo = m.EmployeeID
group by m.EmployeeID, m.FirstName, m.LastName
having count(e.EmployeeID) > 2;

select City, CompanyName as Name, ContactName, 'Customer' as Type
from Customers
UNION ALL
select City, CompanyName as Name, ContactName, 'Supplier' as Type
from Suppliers
order by City, Type;
